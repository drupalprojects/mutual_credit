<?php
//Id;

function mcapi_signatures_install() {
  $mcapi_signed_off_notify_template = array(
    'subject' =>  st('Transaction signed off'),
    'body' => st('The following transaction has been signed off: @token', array('@token' => '[transaction:uri]'))
  );
  variable_set('mcapi_signed_off_notify_template', $mcapi_signed_off_notify_template);
  $mcapi_sign_notify_template = array(
    'subject' =>  st('Your signature is required'),
    'body' => st('Your signature is required on @token', array('@token' => '[transaction:uri]'))
  );
  variable_set('mcapi_sign_notify_template', $mcapi_sign_notify_template);
}

  if(db_query("show tables like 'mc_unsigned'")->fetchfield()) {
    db_rename_table('mc_unsigned', 'mcapi_signatures');
  }


function mcapi_signatures_uninstall() {
  module_load_include('module', 'mcapi_pending');
  $actions = array_keys(mcapi_pending_action_info());
  $aids = db_select('actions', 'a')->fields('a', array('aid'))->condition('callback', $actions)->execute()->fetchCol();
  foreach ($aids as $aid) {
    actions_delete($aid);
  }
  if (module_exists('views')) {
    $view = views_get_view('signatures');
    if($view) {
      views_delete_view($view);
    }
  }
}
/**
 * Implementation of hook_schema)().
 * creates a table for storing signatures needed on pending transactions
 */
function mcapi_signatures_schema() {
  $schema['mcapi_signatures'] = array(
    'description' => 'signatories needed on pending transactions',
    'fields' => array(
      'serial' => array(
        'description' => t('the transaction to which this entry is attached'),
        'type' => 'varchar',
        'length' => 16,
      ),
      'uid' => array(
        'description' => t('the uid of the signatory'),
        'type' => 'int',
        'size' => 'normal',
      ),
      'pending' => array(
        'description' => t('whether it is awaiting a signature'),
        'type' => 'int',
        'size' => 'small',
      )
    ),
    'primary key' => array('serial', 'uid')
  );
  return $schema;
}