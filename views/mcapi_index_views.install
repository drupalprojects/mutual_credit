<?php

function mcapi_index_views_enable() {
  db_query("DROP VIEW IF EXISTS {mcapi_index}");
  db_query("CREATE ALGORITHM = UNDEFINED VIEW  {mcapi_index} AS
      SELECT
          t.xid,
          t.serial,
          t.payer AS uid1,
          t.payee AS uid2,
          t.type,
          0 AS income,
          w.worth_quantity AS expenditure,
          - w.worth_quantity AS diff,
          w.worth_quantity AS volume,
          w.worth_currcode AS currcode,
          t.created
        FROM {mcapi_transactions} t
        RIGHT JOIN {field_data_worth} w ON t.xid = w.entity_id
        WHERE state > 0
    UNION
      SELECT
          t.xid,
          t.serial,
          t.payee AS uid1,
          t.payer AS uid2,
          t.type,
          w.worth_quantity AS income,
          0 AS expenditure,
          w.worth_quantity AS diff,
          w.worth_quantity AS volume,
          w.worth_currcode AS currcode,
          t.created
        FROM {mcapi_transactions} t
        RIGHT JOIN {field_data_worth} w ON t.xid = w.entity_id
        WHERE state > 0"
  );
}

function mcapi_index_views_uninstall() {
  db_query("DROP VIEW IF EXISTS {mcapi_index}");
  $views = db_query("SELECT name from {views_view} WHERE base_table = 'mcapi_index'")->fetchCol();
  foreach ($views as $viewname) {
    $view = views_get_view($viewname);
    views_delete_view($view);
  }
}


/*
 * implements hook_schema
 * not needed since we are using a mysql view instead
 */
function ___mcapi_index_views_get_schema() {
  $numeric = array(
    'type' => 'numeric',
    'size' => 'normal',
    'precision' => 8,
    'scale' => 2
  );
  $schema['mcapi_index'] = array(
    'description' => 'enables views to slice and dice the transactions',
    'fields' => array(
      'serial' => array(
        'description' => 'serial number',
        'type' => 'varchar',
        'size' => '16',
        'not null' => TRUE,
      ),
      'uid1' => array(
        'description' => 'the user to which this entry is attached',
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid2' => array(
        'description' => 'the user to which this entry is attached',
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
      ),
      'currcode' => array(
        'description' => 'the currency id, where there is more than one currency',
        'type' => 'varchar',
        'length' => '8',
        'not null' => TRUE,
      ),
      'income' => array(
        'description' => 'the number of units incoming',
        'type' => 'numeric',
        'size' => 'normal',
        'precision' => 8,
        'scale' => 2,
        'default' => 0,
      ),
      'expenditure' => array(
        'description' => 'the number of units incoming',
        'type' => 'numeric',
        'size' => 'normal',
        'precision' => 8,
        'scale' => 2,
        'default' => 0,
      ),
      'diff' => array(
        'description' => 'the change in balance',
        'type' => 'numeric',
        'size' => 'normal',
        'precision' => 8,
        'scale' => 2,
        'default' => 0,
      ),
      'volume' => array(
        'description' => 'the volume of the transaction',
        'type' => 'numeric',
        'size' => 'normal',
        'precision' => 8,
        'scale' => 2,
        'default' => 0,
      ),
      'created' => array(
        'description' => "Unixtime that the transaction was recorded",
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
      ),
      'balance' => array(
        'description' => 'balance excluding pending transactions',
        'type' => 'numeric',
        'size' => 'normal',
        'precision' => 8,
        'scale' => 2,
      ),
    ),
    'unique keys' => array(
      'serial_uid1' => array('serial', 'uid1')
    )
  );
  return $schema;
}
/**
 * update function to rebuild the mysql index view
 */
function mcapi_index_views_update_7002() {
  //DRUPAL_SET_MESSAGE('Check all views involving the transaction->state filter','warning');
  mcapi_index_views_enable();
}
