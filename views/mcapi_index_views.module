<?php
//$Id

/*
 * Module keeps a cache of transactions which is optimised for views to interrogate
 */


/*
 * Implements views hook_views_api
 */
function mcapi_index_views_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'mcapi_index_views'),
  );
}

/*
 * implements hook_views_query_alter
 * adds the currency code field to queries which is necessary for theming
 */
function mcapi_index_views_views_query_alter($view, &$query) {
  if (in_array('mcapi_index', array_keys($query->table_queue))) {
    //this index table needs to have the currency code field put in automatically
    $query->add_field('mcapi_index', 'currcode', 'currcode');
  }
}
//views access control callback
function views_plugin_access_user_arg_check() {
  return $GLOBALS['user']->uid == arg(1) || user_access('manage all transactions');
}

/*
 * callback to give times and balances
 * $mode can be either
 *   diagonal, square, or the number of points required after sampling
 */
function get_balance_history($account, $currcodes = array(), $mode = 'diagonal', $since = NULL) {
  db_query("SET @csum := 0");
  if (empty($currcodes)) {
    $currcodes = array_keys(currencies_load($account));
  }
  foreach ($currcodes as $currcode) {
    //make a starting point, before the first transaction
    //then retrive up the WHOLE transaction history
    //the first entry is zero meaning the account created time, zero meaning starting balance
    $histories[$currcode] = array(0 => 0) +
    db_query("SELECT created - :born, (@csum := @csum + diff) as balance
      FROM {mcapi_index}
      WHERE currcode = :currcode AND uid1 = :uid
      ORDER BY created",
      array(
        ':currcode' => $currcode,
        ':born' => $account->created,
        ':uid' => $account->uid
      )
    )->fetchAllKeyed(0);
    //make an end point now with the balance the same as the last point
    $histories[$currcode][REQUEST_TIME - $account->created] = end($histories[$currcode]);
    //now we need to curtail the history using $since
    //that means removing every value in the array whose key is less than $since
    //how to do that without iterating through what might be a large array?
  }
  return $histories;
}

/**
 * Implementation of hook_backup_migrate_profiles_alter().
 * backup migrate module breaks with the mysql view
 */
function mcapi_index_views_backup_migrate_profiles_alter(&$profiles) {
  foreach ($profiles as $name => $profile) {
    $profile->filters['destinations']['db']['exclude_tables']['mcapi_index'] = 'mcapi_index';
  }
}