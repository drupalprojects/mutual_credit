<?php
// $Id$

/**
 * Implementation of hook_install().
 */
function cc_currencies_install() {
  drupal_install_schema('cc_currencies');
  db_query("UPDATE {system} SET weight = 5 WHERE name = 'cc_currencies'");
}

/**
 * Implementation of hook_enable().
 */
function cc_currencies_enable(){
  if (!count(get_currencies())) {
    $node = variable_get('cc_default_currency', NULL);
    $node->type = 'currency';
    $node->body = t('This currency was the system default but is now one of many possible currencies.');
    $node->status = TRUE;
    $node->promote = 0;
    $node->sticky = 1;
    $node->format = 1;
    $node->uid = 1;
    node_save($node);
    //and because the hoook isn't registered yet
    cc_currencies_insert($node);
    //need to alter all the database tables with currency ids, and transfer all 0 cids to the first cid.
    //get the first and only node curency id
    $cid = db_result(db_query("SELECT nid from node where type = 'currency' ORDER BY nid LIMIT 0,1"));
    drupal_set_message('first currency is ' .$cid);
    db_query("UPDATE {cc_transactions} SET cid = %d WHERE cid = 0", $cid);
    db_query("UPDATE {cc_balance_cache} SET cid = %d WHERE cid = 0", $cid);
  }
}

/**
 * Implementation of hook_disable().
 */
function cc_currencies_disable(){
  //get the first currency, which we will set to become the default
  $def_cur_properties = db_fetch_array(db_query("SELECT * FROM {node} n LEFT JOIN {cc_multiple} m ON n.nid = m.nid WHERE n.type ='currency' ORDER BY n.nid ASC LIMIT 0,1"));
  $currency = (object)array(
    'title' => $def_cur_properties['title'],
    'division' => $def_cur_properties['division'],
    'max_balance' => $def_cur_properties['max_balance'],
    'min_balance' => $def_cur_properties['min_balance'],
    'comparative_value' => $def_cur_properties['comparative_value'],
    'zero_offset' => $def_cur_properties['zero_offset'],
    'cid' => $def_cur_properties['cid'],
    'cid' => 1,
    'icon' => $def_cur_properties['icon'],
  );
  variable_set('cc_default_currency', $currency);
  db_query("UPDATE {cc_transactions} SET cid = 0 WHERE cid = %d", $def_cur_properties['nid']);
  db_query("UPDATE {cc_balance_cache} SET cid = 0 WHERE cid = %d", $def_cur_properties['nid']);
  db_query("DELETE from {cc_balance_cache} WHERE cid != 0");
  
}

/**
 * Implementation of hook_uninstall().
 */
function cc_currencies_uninstall() {
  //foreach currency, delete all the transaction, all the pending balances, and all the currencies
  db_query("DELETE FROM {node} WHERE type = 'currency'");
  drupal_uninstall_schema('cc_currencies');
}

function cc_currencies_schema() {
  $schema['cc_multiple'] = array(
    'description' => t('metadata for currencies, in addition to name and title'), 
    'fields'=> array(
      'nid'=> array(
        'description' => t('the node id to which this currency is attached'),
        'type' => 'int',
        'size' => 'normal',
      ),
      'comparative_value' => array(
        'description' => t("the nominal value of this currency expressed as an objective value (0 means not interchanagable)"),
        'type' => 'int',
        'size' => 'normal',
        'default' => -500,
      ),
      'zero_offset' => array(
        'description' => t("an adjustment to the zero balance per user"),
        'type' => 'int',
        'size' => 'normal',
        'default' => 0,
      ),
      'division' => array(
        'description' => t("what happens after the decimal point, quarter hours or centiles"),
        'type' => 'varchar',
        'length' => '10',
      ),
      'min_balance' => array(
        'description' => t("the default minumim balance allowed to tbe held"),
        'type' => 'int',
        'size' => 'normal',
        'default' => -500,
      ),
      'max_balance' => array(
        'description' => t("the default maximum balance allowed to tbe held"),
        'type' => 'int',
        'size' => 'normal',
        'default' => 500,
      ),
      'icon' => array(
        'description' => t("location of the currency icon"),
        'type' => 'varchar',
        'length' => '128',
      ),
    )
  );
  return $schema;
}