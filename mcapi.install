<?php

/**
 * @file
 * Install, update and uninstall functions for the transactions module.
 */


use Drupal\user\Entity\User;
use Drupal\field\Entity\FieldInstanceConfig;
use Drupal\mcapi\Entity\Exchange;
use Drupal\mcapi\Entity\Wallet;

/**
 * Implements hook_install().
 */
function mcapi_install() {
  module_set_weight('field_ui', -1);//mcapi has to be after field_ui for mcapi_local_tasks_alter
  //see field_ui_local_tasks_alter() where
  //$local_task->alterLocalTasks($local_tasks); replaces some tasks already passed
}


/**
 * implements hook_modules_installed().
 * continue setting up the module, but after the config has been enabled
 */
function mcapi_modules_installed($modules) {
  if (!in_array('mcapi', $modules)) return;

  //for the rest of this we need the config files
  //set the path of the zero image in currency 1
  $config = \Drupal::config('mcapi.misc');
  $path = url(drupal_get_path('module', 'mcapi') . '/templates/present.png');
  $config->set('zero', '<img src = "'. $path .'" width = "31" />');
  $config->save();

  //default exchange
  //according to the default settings this will have autocreated a wallet for the exchange !
  $props = array(
  	'name' => t(
      'First !sitename exchange',
      array('!sitename' => \Drupal::config('system.site')->get('name'))
    ),
    'uid' => 1,
    'currencies' => array('cc')
  );
  $ex = Exchange::create($props);
  $ex->save();
  drupal_set_message(t('First exchange created.'));

  //we need to deal with existing users, especially user 1
  //in accordance with the default wallet settings
  //-put every user in the default exchange
  $users = User::loadMultiple();
  foreach ($users as $account) {
    if ($account->id() == 0) continue;
    $account->set('exchanges', array($ex->id()));
    $account->save();

    //give every existing user a wallet
    $values = array('entity_type' => $account->getEntityTypeId(), 'pid' => $account->id());
    $w = Wallet::create($values);
    $w->set('name', t("@name's default wallet", array('@name' => $account->label())));
    $w->save();
  }
  $count = count($users)-1;

  drupal_set_message(format_plural(
    count($users)-1,
    'User 1 was added to the exchange',
    'All @count members were added to the exchange.'
  ));
}

/**
 * Implements hook_uninstall().
 * @todo Remove the hard coded fieldAPI fields
 * need to do this in devel/php before uninstalling:
 *
  use Drupal\field\Entity\FieldStorageConfig;
  FieldStorageConfig::load('mcapi_transaction.worth')->delete();
  FieldStorageConfig::load('mcapi_exchange.currencies')->delete();
  FieldStorageConfig::load('user.exchanged')->delete();
  field_purge_batch(3);
 */
function mcapi_uninstall() {
  $instances = array(
    'mcapi_exchange.currencies',
    'user.exchanges'
  );
  foreach ($instances as $config) {
    if ($instance = FieldInstanceConfig::load($config)) {
      drupal_set_message("deleting field $config");
      $instance->delete();
    }
  }
  field_purge_batch(3);
  drupal_set_message('now run cron to clear the fieldAPI');
  return;
  //this shouldn't be necessary!!
  db_drop_table('user__exchanges');
  db_drop_table('user_revision__exchanges');
}

/**
 * Implements hook_schema().
 */
function mcapi_schema() {
  //not sure whether this belongs in the wallet or in the Exchange storage controller
  $schema['mcapi_wallet_exchanges_index'] = array(
    'description' => "Index to look up wallets parents' exchanges",
    'fields' => array(
      'wid' => array(
        'description' => 'the wallet ID',
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
      ),
      'exid' => array(
        'description' => 'the exchange ID',
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
      )
    ),
    'unique keys' => array(
      'wid_exit' => array('wid', 'exid'),
    )
  );
  return $schema;
}

/*
 * change the database tables
 * DOES HOOK_UPDATE_N EXIST ANY MORE?
 */
function mcapi_update_8000() {
  //put the transaction description data into the entity table
  db_query('DROP VIEW mcapi_index');
  //change the mcapi_transactions table
  //change the field_data_worth table into mcapi_transaction_data
  //create the mcapi_index table
  $tables = mcapi_schema();
  db_create_table('mcapi_transactions_index', $tables['mcapi_transactions_index']);
}

/*
 * migrate any other data around
 */
function __mcapi_update_8001() {

  update_variables_to_config('node.misc', array(
    // 'old_variable' => 'new_config.sub_key'
  ));
  //replace the token namespace in the transaction sentence from 'transaction' to 'mcapi'
}


/*
 * remove unneeded data
 */
function __mcapi_update_8002() {
  //deleted the field_data_worth field and tables (if not used elsewhere)
  //delete the transaction description field and tables if not used elsewhere

}
