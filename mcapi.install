<?php

/**
 * @file
 * Install, update and uninstall functions for the transactions module.
 */

use Drupal\user\Entity\User;
use Drupal\mcapi\Entity\Wallet;

/**
 * Implements hook_install().
 */
function mcapi_install() {
  module_set_weight('field_ui', -1);//mcapi has to be after field_ui for mcapi_local_tasks_alter

  //create an intertrading wallet (on user 1 if not stated)
  Wallet::create([
    'payways' => Wallet::PAYWAY_AUTO
  ])->save();

  //we need to deal with existing users, especially user 1
  //in accordance with the default wallet settings
  //-put every user in the default exchange
  $users = User::loadMultiple();
  foreach ($users as $account) {
    if ($account->id() == 0) {
      continue;
    }
    //give every existing user a wallet
     Wallet::create([
      'payways' => Wallet::PAYWAY_ANYONE_BI,
      'holder' => $account
    ])->save();
  }

  $zero_icon_uri = '/'. drupal_get_path('module', 'mcapi') . '/templates/present.png';
  $snippet = '<img src = "'. $zero_icon_uri .'" width = "31" />';

  //TEMP this won't work until we sort out the text filtering see \Drupal\mcapi\Element\WorthView
  $snippet = '-';
  \Drupal::configFactory()->getEditable('mcapi.settings')
    ->set('zero_snippet', $snippet)
    ->save();
}

function mcapi_modules_installed($modules) {
  if (in_array('migrate', $modules)) {
    $map_process = [
      'plugin' => 'static_map',
      'bypass' => TRUE,
    ];
    $config = \Drupal::configFactory()->getEditable('migrate.migration.d7_field');
    $process = $map_process + [
      'source' => 'entity_type',
      'map' => [
        'transaction' => 'mcapi_transaction',
      ]
    ];
    $config->set('process.entity_type', $process);

    $process = $map_process + [
      'source' => 'field_name',
      'map' => [
        'transaction_description' => '',
      ]
    ];
    $config->set('process.field_name', $process);

    $map = $config->get('process.type.map');
    $map['worth_field'] = 'worth';
    $config->set('process.type.map', $map);//this will probably be automated @see d7_field.yml
    $conifg->save();




    $config = \Drupal::configFactory()->getEditable('migrate.migration.d7_field_instance');
    $process['source'] = 'bundle';
    $config->set('process.entity_type', $process)->set('process.bundle', $process)->save();
    //@todo once migration has settled down
    //\Drupal::service('plugin.manager.migration')->createInstance($id)
    //$migration->setProcessOfProperty('entity_type', $process);

    drupal_set_message("refresh user 1's wallet name to ".User::load(1)->getDisplayName());
  }
}


/**

$worth = \Drupal\field\Entity\FieldStorageConfig::load('mcapi_transaction.worth');
if ($worth)$worth->delete();
$mem = \Drupal\field\Entity\FieldStorageConfig::load('mcapi_exchange.og_exchange_ref');
if ($mem)$mem->delete();
field_purge_batch(10000);//rows at a time

db_drop_table('mcapi_transaction');
db_drop_table('mcapi_exchange');
db_drop_table('mcapi_transactions_index');
db_drop_table('mcapi_wallet');
db_drop_table('mcapi_wallets_access');
db_drop_table('mcapi_wallets_limits');
db_drop_table('mcapi_wallet_exchanges_index');
db_drop_table('mcapi_transaction__worth');
db_drop_table('mcapi_exchange__currencies');
db_drop_table('mcapi_signatures');
db_drop_table('mcapi_wallet__payers');
db_drop_table('mcapi_wallet__payees');
db_delete('config')->condition('name', '%mcapi%', 'LIKE')->execute();
db_delete('config')->condition('name', 'system.action.transaction%', 'LIKE')->execute();
db_delete('config')->condition('name', [
 'views.view.wallets',
 'views.view.wallet_log',
 'views.view.income_expenditure',
 'views.view.user_rankings',
 'views.view.transactions',
 'views.view.trading_analysis'
], 'IN')->execute();
db_delete('key_value')->condition('name', '%mcapi%', 'LIKE')->execute();
db_delete('key_value')->condition('value', '%mcapi%', 'LIKE')->execute();
db_truncate('cache_config')->execute();
Drupal::configFactory()->getEditable('core.extension')
->clear("module.mcapi")
->clear("module.mcapi_forms")
->clear("module.mcapi_limits")
->clear("module.mcapi_signatures")
->clear("module.mcapi_exchanges")
->save();
drupal_flush_all_caches();
 *
 */

